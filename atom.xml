<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>liusec&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://liusec.github.io/"/>
  <updated>2017-12-09T03:37:23.000Z</updated>
  <id>https://liusec.github.io/</id>
  
  <author>
    <name>liusec</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用Docker 部署 SRCMS</title>
    <link href="https://liusec.github.io/2017/12/08/%E4%BD%BF%E7%94%A8Docker%20%E9%83%A8%E7%BD%B2%20SRCMS/"/>
    <id>https://liusec.github.io/2017/12/08/使用Docker 部署 SRCMS/</id>
    <published>2017-12-08T14:16:08.000Z</published>
    <updated>2017-12-09T03:37:23.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x01-SRCMS-介绍"><a href="#0x01-SRCMS-介绍" class="headerlink" title="0x01 SRCMS 介绍"></a>0x01 SRCMS 介绍</h2><blockquote><p>SRCMS 是一款安全应急响应与缺陷管理软件，致力于为大、中、小企业和组织提供“最敏捷、安全和美观的安全应急响应中心的建站解决方案，帮助企业建立属于自己的安全应急响应中心和体系”。有了SRCMS，您就可以像使用Discuz!搭建论坛一样容易，为您的企业建立安全应急响应中心平台。</p><p>官网：</p><blockquote><p><a href="https://www.plusecurity.cn/srcms.html" target="_blank" rel="noopener">https://www.plusecurity.cn/srcms.html</a></p></blockquote><p>github地址：</p><blockquote><p><a href="https://github.com/martinzhou2015/SRCMS" target="_blank" rel="noopener">https://github.com/martinzhou2015/SRCMS</a></p></blockquote></blockquote><h2 id="0x02-构建-lamp-Dcokerfile"><a href="#0x02-构建-lamp-Dcokerfile" class="headerlink" title="0x02 构建 lamp Dcokerfile"></a>0x02 构建 lamp Dcokerfile</h2><p>首先，我们需要有构建一个lamp 运行环境。</p><blockquote><p>Dockerfile</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"># 基础镜像为ubuntu:14.04</span><br><span class="line">FROM ubuntu:14.04</span><br><span class="line"></span><br><span class="line"># 作者为liusec</span><br><span class="line">MAINTAINER liusec &lt;75065472@qq.com&gt;</span><br><span class="line"></span><br><span class="line"># 替换apt源: 将/etc/apt/sources.list文件中的archive.ubuntu.com替换为mirrors.aliyun.com</span><br><span class="line">RUN sed -i &apos;s/archive.ubuntu.com/mirrors.aliyun.com/g&apos; /etc/apt/sources.list</span><br><span class="line"></span><br><span class="line"># 设置环境变量: 将env环境变量中的TZ设置为Asia/Shanghai</span><br><span class="line">ENV TZ=Asia/Shanghai</span><br><span class="line"></span><br><span class="line"># (1)设置本地时间：强制为/usr/share/zoneinfo/Asia/Shanghai文件创建符号链接（软链接）为/etc/localtime，-f为force</span><br><span class="line"># (2)设置时区：向文件/etc/timezone中写入字符串‘Asia/Shanghai’,更改时区为上海</span><br><span class="line">RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime &amp;&amp; echo $TZ &gt; /etc/timezone</span><br><span class="line"></span><br><span class="line"># 更新源</span><br><span class="line">RUN apt-get update -y</span><br><span class="line"></span><br><span class="line"># 安装apache、vim、bash-completion、unzip</span><br><span class="line">RUN apt-get install -y apache2 vim bash-completion unzip</span><br><span class="line"># 创建文件夹/var/lock/apache2 、/var/run/apache2</span><br><span class="line">RUN mkdir -p /var/lock/apache2 /var/run/apache2</span><br><span class="line"></span><br><span class="line"># 安装mysql-client、 mysql-server; 启动mysql服务; 设置mysql密码</span><br><span class="line">RUN apt-get install -y mysql-client mysql-server \</span><br><span class="line">    &amp;&amp; /etc/init.d/mysql start \</span><br><span class="line">    &amp;&amp; mysqladmin -u root password &quot;root&quot;</span><br><span class="line"></span><br><span class="line"># 安装php</span><br><span class="line">RUN apt-get install -y php5 php5-mysql php5-dev php5-gd php5-memcache php5-pspell php5-snmp snmp php5-xmlrpc libapache2-mod-php5 php5-cli</span><br><span class="line"># RUN yum install -y php php-mysql php-devel php-gd php-pecl-memcache php-pspell php-snmp php-xmlrpc php-xml</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 拷贝phpinfo.php 到docker镜像的/var/www/html/下</span><br><span class="line">COPY src/phpinfo.php /var/www/html/</span><br><span class="line"># 拷贝启动脚本start.sh 到docker镜像的根目录下</span><br><span class="line">COPY src/start.sh /start.sh</span><br><span class="line"># 增加启动脚本start.sh 所有用户和组的执行权限</span><br><span class="line">RUN chmod a+x /start.sh</span><br><span class="line"></span><br><span class="line"># 只开放了80 443端口的映射访问权限</span><br><span class="line">EXPOSE 80 443</span><br><span class="line"># 运行后默认执行start.sh启动脚本</span><br><span class="line">CMD [&quot;/start.sh&quot;]</span><br></pre></td></tr></table></figure><blockquote><p>src/start.sh</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">/etc/init.d/mysql start</span><br><span class="line">/etc/init.d/apache2 restart</span><br><span class="line">/usr/bin/tail -f /dev/null</span><br></pre></td></tr></table></figure><blockquote><p>src/phpinfo.php</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">phpinfo();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h2 id="0x03-生成镜像，启动容器"><a href="#0x03-生成镜像，启动容器" class="headerlink" title="0x03 生成镜像，启动容器"></a>0x03 生成镜像，启动容器</h2><h3 id="3-1-在daocloud云端构建和启动容器"><a href="#3-1-在daocloud云端构建和启动容器" class="headerlink" title="3.1 在daocloud云端构建和启动容器"></a>3.1 在daocloud云端构建和启动容器</h3><p>将上述文件push到github项目中，lamp项目地址：</p><p><a href="https://github.com/liusec/lamp" target="_blank" rel="noopener">https://github.com/liusec/lamp</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">├── Dcokerfile</span><br><span class="line">├── README.md</span><br><span class="line">└── src</span><br><span class="line">    ├── phpinfo.php</span><br><span class="line">    └── start.sh</span><br><span class="line"></span><br><span class="line">1 directory, 4 files</span><br></pre></td></tr></table></figure><p>使用daocloud 关联github，自动构建lamp镜像，使用构建好的镜像启动容器进行测试。</p><p>daocloud 云端测试截图：</p><p><img src="http://p0naohs8x.bkt.clouddn.com/phpinfo.png" alt="phpinfo.png"></p><h3 id="3-2-本地启动lamp容器测试"><a href="#3-2-本地启动lamp容器测试" class="headerlink" title="3.2 本地启动lamp容器测试"></a>3.2 本地启动lamp容器测试</h3><p>构建好的docker镜像已设置公开访问，希望在本地测试的小伙伴可以使用下面方法。</p><ol><li><p>拉取镜像到本地</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker pull daocloud.io/liusheng/lamp:master-98827dc</span><br></pre></td></tr></table></figure></li><li><p>启动环境</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker run -d -p 8000:80 daocloud.io/liusheng/srcms_docker:latest</span><br></pre></td></tr></table></figure><blockquote><p><code>-p 8000:80</code> 前面的 8000 代表物理机的端口，可随意指定。</p></blockquote></li><li><p>访问测试</p><p><a href="http://127.0.0.1:8000/phpinfo.php" target="_blank" rel="noopener">http://127.0.0.1:8000/phpinfo.php</a></p></li></ol><h2 id="0x04-创建srcms-docker-image"><a href="#0x04-创建srcms-docker-image" class="headerlink" title="0x04 创建srcms docker image"></a>0x04 创建srcms docker image</h2><p>在上一步lamp镜像的基础上，创建srcms的Dockerfile</p><blockquote><p>Dockerfile</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"># 基础镜像为daocloud.io/liusheng/lamp</span><br><span class="line">FROM daocloud.io/liusheng/lamp:master-98827dc</span><br><span class="line"></span><br><span class="line"># 作者为liusec</span><br><span class="line">MAINTAINER liusec &lt;75065472@qq.com&gt;</span><br><span class="line"></span><br><span class="line">ARG SRCMS_URL=https://github.com/martinzhou2015/SRCMS/archive/master.zip</span><br><span class="line"></span><br><span class="line"># 解压srcms.zip 到 /var/www/html/下</span><br><span class="line">RUN set -x \</span><br><span class="line">    &amp;&amp; apt-get update \</span><br><span class="line">    &amp;&amp; apt-get install -y --force-yes wget \</span><br><span class="line">    &amp;&amp; wget -qO /tmp/srcms.zip $SRCMS_URL \</span><br><span class="line">    &amp;&amp; unzip -q /tmp/srcms.zip -d /tmp/ \</span><br><span class="line">    &amp;&amp; mv /tmp/SRCMS-master/* /var/www/html/ \</span><br><span class="line">    &amp;&amp; rm -rf /tmp/SRCMS-master</span><br><span class="line"></span><br><span class="line"># 创建数据库srcms ，导入sql</span><br><span class="line"># 修改接收邮件的邮箱</span><br><span class="line">RUN set -x \</span><br><span class="line">    &amp;&amp; chown -R www-data:www-data /var/www/html/ \</span><br><span class="line">    &amp;&amp; /etc/init.d/mysql start \</span><br><span class="line">    &amp;&amp; mysql -e &quot;CREATE DATABASE srcms DEFAULT CHARACTER SET utf8;&quot; -uroot -proot \</span><br><span class="line">    &amp;&amp; mysql -e &quot;use srcms;source /var/www/html/DB/srcms.sql;&quot; -uroot -proot \</span><br><span class="line">    &amp;&amp; rm -f /var/www/html/DB/srcms.sql \</span><br><span class="line">    &amp;&amp; sed -i &apos;s/1009465756@qq.com/75065472@qq.com/g&apos; /var/www/html/Application/User/Controller/PostController.class.php</span><br><span class="line"></span><br><span class="line">COPY src/start.sh /start.sh</span><br><span class="line">RUN chmod a+x /start.sh</span><br><span class="line"></span><br><span class="line">EXPOSE 80</span><br></pre></td></tr></table></figure><blockquote><p>src/start.sh</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">/etc/init.d/mysql restart</span><br><span class="line">/etc/init.d/apache2 restart</span><br><span class="line">/usr/bin/tail -f /dev/null</span><br></pre></td></tr></table></figure><h2 id="0x05-生成镜像，启动运行"><a href="#0x05-生成镜像，启动运行" class="headerlink" title="0x05 生成镜像，启动运行"></a>0x05 生成镜像，启动运行</h2><h3 id="5-1-在云端启动docker容器"><a href="#5-1-在云端启动docker容器" class="headerlink" title="5.1 在云端启动docker容器"></a>5.1 在云端启动docker容器</h3><p>将上面所述文件push到github项目,srcms_docker项目地址：</p><p><a href="https://github.com/liusec/srcms_docker" target="_blank" rel="noopener">https://github.com/liusec/srcms_docker</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">├── Dockerfile</span><br><span class="line">├── README.md</span><br><span class="line">└── src</span><br><span class="line">    └── start.sh</span><br><span class="line"></span><br><span class="line">1 directory, 3 files</span><br></pre></td></tr></table></figure><p>使用daocloud 自动构建，启动服务</p><p><img src="http://p0naohs8x.bkt.clouddn.com/srcms_index.png" alt="srcms_index.png"></p><h3 id="5-2-在本地启动docker容器"><a href="#5-2-在本地启动docker容器" class="headerlink" title="5.2 在本地启动docker容器"></a>5.2 在本地启动docker容器</h3><p>希望在本地部署的小伙伴可以将docker镜像拉取到本地启动，方法如下</p><ol><li><p>拉取镜像到本地</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker pull daocloud.io/liusheng/srcms_docker:latest</span><br></pre></td></tr></table></figure></li><li><p>启动环境</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker run -d -p 8000:80 daocloud.io/liusheng/srcms_docker:latest</span><br></pre></td></tr></table></figure><blockquote><p><code>-p 8000:80</code> 前面的 8000 代表物理机的端口，可随意指定。 </p></blockquote></li><li><p>访问SRCMS</p><p><a href="http://127.0.0.1:8000/index.php" target="_blank" rel="noopener">http://127.0.0.1:8000/index.php</a></p><p><img src="http://p0naohs8x.bkt.clouddn.com/srcms_index.png" alt="srcms_index.png"></p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;0x01-SRCMS-介绍&quot;&gt;&lt;a href=&quot;#0x01-SRCMS-介绍&quot; class=&quot;headerlink&quot; title=&quot;0x01 SRCMS 介绍&quot;&gt;&lt;/a&gt;0x01 SRCMS 介绍&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;SRCMS 是一款安全应急
      
    
    </summary>
    
      <category term="安全开发" scheme="https://liusec.github.io/categories/%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="docker" scheme="https://liusec.github.io/tags/docker/"/>
    
      <category term="srcms" scheme="https://liusec.github.io/tags/srcms/"/>
    
  </entry>
  
</feed>
